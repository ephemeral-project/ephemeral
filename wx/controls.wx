%textures = 'Interface\AddOns\ephemeral\textures'

Button epButton(epControl, virtual):
  !Size(y: 19)
  HighlightTexture(epControlHighlight, alphaMode: ADD)
  PushedTexture(epControlHighlight, alphaMode: ADD)
  ButtonText:
    !Center(0, 0)
  !PushedTextOffset(0, 0)
  !NormalFont(epLabelFont)
  !HighlightFont(epHighlightFont)
  OnLoad:
    *ep.Button(self)

CheckButton epCheckBox(virtual):
  !Size(16, 16)
  NormalTexture(file: '%textures\box-empty'):
    !TopLeft(-4, 4)
    !BottomRight(4, -4)
    !TexCoords(0.03125, 0.96875, 0.03125, 0.96875)
  CheckedTexture(file: '%textures\check'):
    !TopLeft(-4, 4)
    !BottomRight(4, -4)
    !TexCoords(0.03125, 0.96875, 0.03125, 0.96875)
  HighlightTexture(epControlHighlight):
    !TopLeft(1, -1)
    !BottomRight(-1, 1)
  ButtonText:
    !Anchor(point: LEFT, relativePoint: RIGHT, x: 4, y: 0)
  !PushedTextOffset(0, 0)
  !NormalFont(epLabelFont, LEFT)
  !HighlightFont(epHighlightFont, LEFT)
  OnLoad:
    *ep.CheckBox(self)

CheckButton epReversedCheckBox(epCheckBox, virtual):
  ButtonText:
    !Anchor(point: RIGHT, relativePoint: LEFT, x: -4, y: 0)
  !NormalFont(epLabelFont, RIGHT)
  !HighlightFont(epHighlightFont, RIGHT)
  OnLoad:
    *ep.CheckBox(self, {reversed=true})

Button epColorSpot(epControl, virtual):
  !Size(16, 16)
  HighlightTexture(epControlHighlight)
  !Border:
    Texture $parentColor(.spot):
      !TopLeft(2, -2)
      !BottomRight(-2, 2)
  !Artwork:
    Texture $parentT:
      !Size(y: 2)
      !TopLeft(2, -2)
      !TopRight(-2, -2)
      !Color(0.82, 0.76, 0.61, 1.0)
    Texture $parentR:
      !Size(x: 2)
      !TopRight(-2, -2)
      !BottomRight(-2, 2)
      !Color(0.82, 0.76, 0.61, 1.0)
    Texture $parentB:
      !Size(y: 2)
      !BottomLeft(2, 2)
      !BottomRight(-2, 2)
      !Color(0.82, 0.76, 0.61, 1.0)
    Texture $parentL:
      !Size(x: 2)
      !TopLeft(2, -2)
      !BottomLeft(2, 2)
      !Color(0.82, 0.76, 0.61, 1.0)
  OnLoad:
    *ep.ColorSpot(self)

EditBox epComboBox(epControl, font: epNormalFont, -autoFocus, virtual):
  !Size(y: 19)
  !TextInsets(5, 22, 0, 0)
  Button $parentOpener(NoInherit):
    !Size(19, 19)
    !TopRight
    !Border:
      Texture(epArrowDownBg):
        !Size(17, 17)
        !TopRight(-1, -1)
    !Artwork:
      Texture(epControlInnerEdgeR):
        !TopRight(-12, -1)
        !BottomRight(-12, 1)
    HighlightTexture(epControlHighlight, alphaMode: ADD):
      !Size(17, 17)
      !TopRight(-1, -1)
    OnClick:
      *self:GetParent():open()
  OnEnterPressed:
    *self:select(self:GetText())
  OnEscapePressed:
    *self:select(self:GetText())
  OnEditFocusGained:
    *self:HighlightText()
  OnEditFocusLost:
    *self:HighlightText(0, 0)
  OnLoad:
    *ep.ComboBox(self)

Button epDropBox(epControl, virtual):
  !Size(y: 19)
  ButtonText $parentText:
    !Left(5, 0)
  !PushedTextOffset(0, 0)
  !NormalFont(epNormalFont, LEFT)
  !HighlightFont(epHighlightFont, LEFT)
  !Border:
    Texture(epArrowDownBg):
      !Size(17, 17)
      !TopRight(-1, -1)
  !Artwork:
    Texture(epControlInnerEdgeR):
      !TopRight(-12, -1)
      !BottomRight(-12, 1)
  HighlightTexture(epStandardHighlight):
    !Size(17, 17)
    !TopRight(-1, -1)
  OnClick:
    *self:open()
  OnLoad:
    *ep.DropBox(self)

Frame epEditAreaBase(virtual):
  !Border:
    FontString $parentInnerLabel(epInnerLabelFont, .innerLabel, justifyH: LEFT, hidden):
      !TopLeft(6, -6)
      !TopRight(-6, -6)
  ScrollFrame $parentScrolled(.scrollFrame):
    !TopLeft(6, -6)
    !BottomRight(-6, 6)
    ScrollChild:
      EditBox $parentText(NoInherit, font: epNormalFont, letters: 2048, +multiline, -autoFocus):
        OnCursorChanged:
          *self:GetParent():GetParent():updateCursor(x, y)
        OnEditFocusGained:
          *self:GetParent():GetParent().innerLabel:Hide()
        OnEditFocusLost:
          *self:GetParent():GetParent():_focusLost()
        OnEscapePressed:
          *self:ClearFocus()
        OnMouseWheel:
          *self:GetParent().scrollbar:move(-delta)
    OnLoad:
      *ep.ScrollFrame(self, {managed=true})
  OnLoad:
    *ep.EditArea(self)
  OnMouseDown:
    *if not self.disabled and button == 'LeftButton' then
    *  self.editbox:SetFocus()
    *end

Frame epEditArea(inherits: 'epControl,epEditAreaBase', virtual)

EditBox epEditBox(epControl, font: epNormalFont, -autoFocus, virtual):
  !Size(y: 19)
  !Border:
    FontString $parentInnerLabel(epInnerLabel, .innerLabel, hidden)
  !TextInsets(5, 4, 0, 1)
  Button $parentClear(NoInherit, .clearButton, hidden):
    !Size(20, 20)
    !TopRight(0, 1)
    NormalTexture(file: '%textures\close-normal'):
      !Size(20, 20)
      !TexCoords(0.1875, 0.8125, 0.1875, 0.8125)
    HighlightTexture(file: '%textures\close-highlight'):
      !Size(20, 20)
      !TexCoords(0.1875, 0.8125, 0.1875, 0.8125)
    OnClick:
      *self:GetParent():setValue('')
  OnEnterPressed:
    *self:ClearFocus()
  OnEscapePressed:
    *self:ClearFocus()
  OnEditFocusGained:
    *self.innerLabel:Hide()
  OnEditFocusLost:
    *self:_focusLost()
  OnTabPressed:
    *self:showHistory()
  OnLoad:
    *ep.EditBox(self)

EditBox epInlineEditBox(epEditBox, virtual):
  OnEditFocusGained:
    *self._editing = true
    *self:EnableDrawLayer('BACKGROUND')
    *self:EnableDrawLayer('BORDER')
  OnEditFocusLost:
    *self._editing = nil
    *self:DisableDrawLayer('BACKGROUND')
    *self:DisableDrawLayer('BORDER')
  OnEnter:
    *if not self._editing then
    *  self:EnableDrawLayer('BACKGROUND')
    *  self:EnableDrawLayer('BORDER')
    *end
  OnLeave:
    *if not self._editing then
    *  self:DisableDrawLayer('BACKGROUND')
    *  self:DisableDrawLayer('BORDER')
    *end
  OnShow:
    *self:DisableDrawLayer('BACKGROUND')
    *self:DisableDrawLayer('BORDER')

Frame epGrid(epControl, virtual):
  Frame $parentHeader(.header, hidden):
    !Size(y: 19)
    !TopLeft(1, -1)
    !TopRight(-1, -1)
    !Background:
      Texture(epControlBackground, setAllPoints)
    !Border:
      Texture(epControlEdgeB):
        !BottomLeft(0, -6)
        !BottomRight(0, -6)
  VerticalScrollBar $parentScrollBar(.scrollbar):
    !TopRight(0, -13)
    !BottomRight(0, 13)
    OnLoad:
      *ep.Slider(self, {callback={ep.Grid.update, self:GetParent()}})
  OnLoad:
    *ep.Grid(self)
  OnSizeChanged:
    *if self.resize then
    *  self:resize()
    *end

Button epGridHeader(NoInherit, virtual):
  !Size(y: 18)
  ButtonText $parentText:
    !Left(0, 0)
  !PushedTextOffset(0, 0)
  !NormalFont(epNormalFont, LEFT)
  !HighlightFont(epHighlightFont, LEFT)
  HighlightTexture(epControlHighlight, alphaMode: ADD):
    !TopLeft(-4, 0)
    !BottomRight(-4, 0)
  !Border:
    Texture(epControlInnerEdgeR, .edge):
      !TopRight(2, 0)
      !BottomRight(2, 0)
    Texture(epSlightHighlight, .slightHighlight, hidden):
      !TopLeft(-4, 0)
      !BottomRight(-4, 0)
  !Artwork:
    Texture(epArrowDown, .arrow, hidden):
      !Right(-4, 0)
  OnClick:
    *self:click(button)
  OnEnter:
    *self:enter()
  OnLeave:
    *self:leave()
  OnLoad:
    *ep.GridHeader(self)

Frame epGridRow(virtual):
  !Background:
    Texture $parentDiff(.diff, alphaMode: ADD, setAllPoints, hidden):
      !Color(0.8, 0.8, 0.8, 0.03)
  !Border:
    Texture $parentHighlight(epControlHighlight, .highlight, setAllPoints, hidden)
  OnEnter:
    *self:enter()
  OnLeave:
    *self:leave()
  OnLoad:
    *ep.GridRow(self)
  OnMouseUp:
    *self:manipulate(button)
  OnMouseWheel:
    *self.Grid.scrollbar:move(-delta)

Frame epGridCell(virtual):
  !Size(y: 13)
  !Artwork:
    FontString $parentText(epNormalFont, .text, justifyH: LEFT, justifyV: MIDDLE):
      !TopLeft
      !BottomRight(0, 1)
  OnEnter:
    *self.row:enter()
  OnLeave:
    *self.row:leave()
  OnLoad:
    *ep.GridCell(self)
  OnMouseUp:
    *self.row:manipulate(button)
  OnMouseWheel:
    *self.row.grid.scrollbar:move(-delta)

Button epIconBox(epControl, virtual):
  !Size(38, 38)
  HighlightTexture(epControlHighlight)
  !Border:
    Texture $parentIcon(.texture):
      !TopLeft(2, -2)
      !BottomRight(-2, 2)
      !TexCoords(0.05, 0.95, 0.05, 0.95)
  !Artwork:
    Texture $parentT:
      !Size(y: 2)
      !TopLeft(2, -2)
      !TopRight(-2, -2)
      !Color(0.82, 0.76, 0.61, 1.0)
    Texture $parentR:
      !Size(x: 2)
      !TopRight(-2, -2)
      !BottomRight(-2, 2)
      !Color(0.82, 0.76, 0.61, 1.0)
    Texture $parentB:
      !Size(y: 2)
      !BottomLeft(2, 2)
      !BottomRight(-2, 2)
      !Color(0.82, 0.76, 0.61, 1.0)
    Texture $parentL:
      !Size(x: 2)
      !TopLeft(2, -2)
      !BottomLeft(2, 2)
      !Color(0.82, 0.76, 0.61, 1.0)
  OnLoad:
    *ep.IconBox(self)
  OnClick:
    *self:browse()

Button epListBuilderButton(epControlEdge, virtual):
  !Size(y: 19)
  HighlightTexture(epControlHighlight, alphaMode: ADD)
  PushedTexture(epControlHighlight, alphaMode: ADD)
  ButtonText:
    !Center(0, 1)
  !PushedTextOffset(0, 0)
  !NormalFont(epLabelFont)
  !HighlightFont(epHighlightFont)
  !Background:
    Texture $parentBackground(.background, hidden):
      !TopLeft(0, -2)
      !BottomRight(0, 2)
      !Color(1, 1, 1, 0.2)
  OnEnter:
    *self:enter()
  OnLeave:
    *self:leave()
  OnLoad:
    *ep.ListBuilderButton(self)

Frame epListBuilder(epControl, virtual):
  !Size(y: 21)
  Button $parentAdd(NoInherit, .add):
    !Size(21, 21)
    !TopRight(1, 1)
    NormalTexture(epPlus)
    HighlightTexture(epPlusHighlight)
    OnClick:
      *self:GetParent():open()
  Frame $parentEntries(.entryContainer):
    !TopLeft(4, -2)
    !BottomRight(-20, 1)
  Frame $parentEditor(epControlEdge, .editor, frameStrata: DIALOG, hidden):
    !Size(190, 27)
    !TopLeft(0, -18)
    Backdrop(bgFile: '%textures\panel-background', +tile):
      BackgroundInsets:
        AbsInset(left: 1, right: 1, top: 1, bottom: 1)
      TileSize:
        AbsValue(val: 128)
    ComboBox $parentText(.text):
      !Size(100, 19)
      !TopLeft(4, -4)
      OnLoad:
        *ep.ComboBox(self, {})
    ColorSpot $parentColor(.color):
      !Right(-36)
    Button $parentSave(NoInherit, .save):
      !Size(21, 21)
      !Right(1)
      NormalTexture(epPlus)
      HighlightTexture(epPlusHighlight)
      OnClick:
        *self:GetParent():GetParent():save()
  OnLoad:
    *ep.ListBuilder(self)

Button epMenuButton(NoInherit, virtual):
  !Size(128, 13)
  ButtonText $parentText:
    !Left(0, 0)
  !PushedTextOffset(0, 0)
  !NormalFont(epLabelFont, LEFT)
  !HighlightFont(epHighlightFont, LEFT)
  !Background:
    Texture(setAllPoints):
      !Color(1.0, 0.0, 0.0, 0.0)
  !Border:
    Texture $parentHighlight(epControlHighlight, hidden):
      !TopLeft(-2, 0)
      !BottomRight(2, 0)
  !Artwork:
    Texture $parentCheck(file: '%textures\box-empty'):
      !Size(20, 20)
      !Left(-4, 0)
      !TexCoords(0.1875, 0.8125, 0.1875, 0.8125)
    Texture $parentArrow(epArrowRight):
      !Right(7, 0)
  OnClick:
    *self:activate()
  OnEnter:
    *self:enter()
  OnLeave:
    *self:leave()
  OnLoad:
    *ep.MenuButton(self)
  OnMouseWheel:
    *local scrollbar = self.frame.scrollbar
    *if scrollbar and scrollbar:IsShown() then
    *  scrollbar:move(-delta)
    *end

Frame epMenu(epControlEdge, frameStrata: DIALOG, virtual):
  Backdrop(bgFile: '%textures\panel-background', +tile):
    BackgroundInsets:
      AbsInset(left: 1, right: 1, top: 1, bottom: 1)
    TileSize:
      AbsValue(val: 128)
  !Border:
    Texture(epControlBackground):
      !Color(0.75, 0.63, 0.4, 0.2)
  OnLoad:
    *ep.Menu(self)

Frame epMessageFrameBase(virtual):
  ScrollingMessageFrame $parentMessages(.messages, maxLines: 999999, fade: 0, displayDuration: 65526.0):
    FontString $parentFont(epNormalFont, justifyH: LEFT)
    !TopLeft(5, -4)
    !BottomRight(-18, 6)
    OnMouseWheel:
      *self:GetParent().scrollbar:move(-delta)
  VerticalScrollBar $parentScrollBar(.scrollbar):
    !TopRight(0, -13)
    !BottomRight(0, 13)
    OnLoad:
      *ep.Slider(self, {window=2, callback={ep.MessageFrame.scroll, self:GetParent()}})
  OnLoad:
    *ep.MessageFrame(self)

Frame epMessageFrame(inherits: 'epControl,epMessageFrameBase', virtual)

Button epMultiButton(epControl, virtual):
  !Size(y: 19)
  Button $parentOpener(NoInherit, .opener):
    !Size(19, 19)
    !TopRight
    !Border:
      Texture(epArrowDownBg):
        !Size(17, 17)
        !TopRight(-1, -1)
    !Artwork:
      Texture(epControlInnerEdgeR):
        !TopRight(-12, -1)
        !BottomRight(-12, 1)
    HighlightTexture(epControlHighlight, alphaMode: ADD):
      !Size(17, 17)
      !TopRight(-1, -1)
    PushedTexture(epControlHighlight, alphaMode: ADD):
      !Size(17, 17)
      !TopRight(-1, -1)
    OnClick:
      *self:GetParent():open()
  ButtonText:
    !Center(-9, 0)
  HighlightTexture(epControlHighlight, alphaMode: ADD):
    !BottomRight(-19, 1)
  PushedTexture(epControlHighlight, alphaMode: ADD):
    !BottomRight(-19, 1)
  !PushedTextOffset(0, 0)
  !NormalFont(epNormalFont)
  !HighlightFont(epHighlightFont)
  OnLoad:
    *ep.MultiButton(self)

Frame epMultiFrame(epControlEdge, virtual):
  !Background:
    Texture(epControlBackground):
      !TopLeft(1, -1)
      !BottomRight(-1, 1)
      !Color(0.75, 0.63, 0.4, 0.1)
  OnLoad:
    *ep.MultiFrame(self)

ScrollFrame epScrollFrame(NoInherit, virtual):
  VerticalScrollBar $parentScrollBar(.scrollbar):
    !TopRight(6, -7)
    !BottomRight(6, 7)
    OnLoad:
      *ep.Slider(self, {multiplier=0.15,
      *  callback={ep.ScrollFrame.updateScroll, self:GetParent()}})
  OnLoad:
    *ep.ScrollFrame(self)
  OnMouseWheel:
    *self.scrollbar:move(-delta)
  OnScrollRangeChanged:
    *self:update(xrange, yrange)
  OnSizeChanged:
    *if self.managed then
    *  self.childFrame:SetWidth(self:GetWidth() - 20)
    *end

EditBox epSpinner(epControl, font: epNormalFont, -autoFocus, virtual):
  !Size(y: 19)
  !TextInsets(5, 22, 0, 1)
  !Artwork:
    Texture(epControlInnerEdgeR):
      !TopRight(-12, -1)
      !BottomRight(-12, 1)
    Texture(epControlInnerEdgeB):
      !Size(17, 12)
      !TopRight(-1, -4)
  Button $parentMore(NoInherit, .more):
    !Size(19, 9)
    !TopRight
    !Background:
      Texture(epControlBackground):
        !TopLeft(1, -1)
        !BottomRight(-1, 0)
    HighlightTexture(epStandardHighlight):
      !TopLeft(1, -1)
      !BottomRight(-1, 0)
    OnClick:
      *self:GetParent():spin(1, IsShiftKeyDown())
    OnMouseWheel:
      *self:GetParent():spin(delta)
  Button $parentLess(NoInherit, .less):
    !Size(19, 9)
    !BottomRight
    !Background:
      Texture(epControlBackground):
        !TopLeft(1, 0)
        !BottomRight(-1, 1)
    HighlightTexture(epStandardHighlight):
      !TopLeft(1, 0)
      !BottomRight(-1, 1)
    OnClick:
      *self:GetParent():spin(-1, IsShiftKeyDown())
    OnMouseWheel:
      *self:GetParent():spin(delta)
  OnEnterPressed:
    *self:set(self:GetText())
  OnEscapePressed:
    *self:set(self:GetText())
  OnEditFocusGained:
    *self:HighlightText()
  OnEditFocusLost:
    *self:HighlightText(0, 0)
  OnLoad:
    *ep.Spinner(self)
  OnMouseWheel:
    *self:spin(delta)

StatusBar epStatusBar(epControl, virtual):
  BarTexture $parentBar(epControlHighlight)
  OnLoad:
    *ep.StatusBar(self)

Button epTabButton(NoInherit, virtual):
  !Size(y: 21)
  ButtonText:
    !Center(0, 0)
  !PushedTextOffset(0, 0)
  HighlightTexture(epControlHighlight):
    !TopLeft(0, -1)
    !BottomRight(0, 1)
  !NormalFont(epLabelFont)
  !HighlightFont(epHighlightFont)
  !Background:
    Texture $parentBackground(epControlBackground, hidden):
      !TopLeft(0, -1)
      !BottomRight(0, 1)
      !Color(0.75, 0.63, 0.4, 0.1)
  !Border:
    Texture $parentBorder(epControlInnerEdgeR):
      !TopRight(7, -1)
      !BottomRight(7, 1)
    Texture $parentBottomBorder(epControlInnerEdgeB, .bottomBorder, hidden):
      !BottomLeft(-1, -6)
      !BottomRight(1, -6)
  OnClick:
    *self.frame:select(self.id)
  OnLoad:
    *ep.TabButton(self)

Frame epTabbedFrame(virtual):
  !Background:
    Texture(epControlBackground):
      !TopLeft(1, -20)
      !BottomRight(-1, 1)
      !Color(0.75, 0.63, 0.4, 0.1)
  !Border:
    Texture(epControlEdgeTL):
      !TopLeft(-6, 6)
    Texture $parentTR(epControlEdgeTR, .tf_tr):
      !TopRight(6, 6)
    Texture $parentT(epControlEdgeT):
      !TopLeft(6, 6)
      !Anchor(point: TOPRIGHT, relativeTo: $parentTR, relativePoint: TOPLEFT)
    Texture(epControlEdgeL):
      !TopLeft(-6, -6)
      !BottomLeft(-6, 6)
    Texture(epControlEdgeTR):
      !TopRight(6, -14)
    Texture(epControlEdgeR):
      !TopRight(6, -26)
      !BottomRight(6, 6)
    Texture(epControlEdgeBL):
      !BottomLeft(-6, -6)
    Texture(epControlEdgeB):
      !BottomLeft(6, -6)
      !BottomRight(-6, -6)
    Texture(epControlEdgeBR):
      !BottomRight(6, -6)
    Texture $parentSide(epControlEdgeR, .tf_side, hidden):
      !Anchor(point: TOPRIGHT, relativeTo: $parentTR, x: 0, y: -12)
      !Anchor(point: BOTTOMRIGHT, relativeTo: $parentTR, x: 0, y: -14)
    Texture $parentRightCorner(epControlInnerEdgeBL, .tf_rc):
      !TopRight(-100, -15)
    Texture $parentRightCornerH(epControlEdgeT):
      !Anchor(point: TOPLEFT, relativeTo: $parentRightCorner, relativePoint: TOPRIGHT, x: 0, y: 1)
      !TopRight(-6, 1)
    Texture $parentRightCornerV(epControlEdgeR, .tf_rc_v):
      !Anchor(point: TOPRIGHT, relativeTo: $parentRightCorner, relativePoint: TOPRIGHT, x: 1, y: 14)
      !Anchor(point: BOTTOMRIGHT, relativeTo: $parentRightCorner, relativePoint: TOPRIGHT, x: 1, y: 0)
    Texture $parentLeftCorner(epControlInnerEdgeBR, .tf_lc, hidden):
      !TopLeft(100, -13)
    Texture $parentLeftCornerH(epControlEdgeT, .tf_lc_h, hidden):
      !TopLeft(1, -14)
      !Anchor(point: TOPRIGHT, relativeTo: $parentLeftCorner, relativePoint: TOPLEFT, x: 0, y: -14)
    Texture $parentLeftCornerV(epControlEdgeL, .tf_lc_v, hidden):
      !Anchor(point: TOPLEFT, relativeTo: $parentLeftCorner, relativePoint: TOPLEFT, x: -1, y: 14)
      !Anchor(point: BOTTOMLEFT, relativeTo: $parentLeftCorner, relativePoint: TOPLEFT, x: -1, y: 0)
  OnLoad:
    *ep.TabbedFrame(self)

Button epTreeButton(NoInherit, virtual):
  !Size(128, 16)
  ButtonText $parentText(.text):
    !Left(0, 0)
  !PushedTextOffset(0, 0)
  !NormalFont(epLabelFont, LEFT)
  !HighlightFont(epHighlightFont, LEFT)
  !Background:
    Texture(setAllPoints):
      !Color(1.0, 0.0, 0.0, 0.0)
  !Border:
    Texture $parentHighlight(epControlHighlight, .highlight, hidden):
      !TopLeft(-2, 0)
      !BottomRight(2, 0)
  Button $parentArrow(NoInherit, .arrow, hidden):
    !Size(20, 20)
    !Left(-7, -1)
    NormalTexture(epArrowRight)
    OnClick:
      *self:GetParent():openOrClose()
    OnEnter:
      *self:GetParent():enter()
    OnLeave:
      *self:GetParent():leave()
    OnMouseWheel:
      *self:GetParent():scroll(delta)
  OnClick:
    *self:select()
  OnEnter:
    *self:enter()
  OnLeave:
    *self:leave()
  OnLoad:
    *ep.TreeButton(self)
  OnMouseWheel:
    *self:scroll(delta)

Frame epTree(epControl, virtual):
  !Artwork:
    FontString(epTitleFont, .titleString, justifyH: LEFT, hidden):
      !TopLeft(5, -6)
  !Border:
    Texture $parentTitleDivider(epControlInnerEdgeB, .titleDivider, hidden):
      !TopLeft(1, -18)
      !TopRight(-1, -16)
  VerticalScrollBar $parentScrollBar(.scrollbar):
    !TopRight(0, -13)
    !BottomRight(0, 13)
    Onload:
      *ep.Slider(self, {callback={ep.Tree.update, self:GetParent()}})
  OnLoad:
    *ep.Tree(self)
  OnSizeChanged:
    *if self.resize then
    *  self:resize()
    *end

Slider epVerticalScrollBar(orientation: VERTICAL, valueStep: 1, virtual):
  !Size(16, 16)
  ThumbTexture $parentThumb(file: '%textures\thumb-vertical'):
    !Size(20, 20)
    !HitRectInsets(2, 2, 2, 2)
    !TexCoords(0.1875, 0.8125, 0.1875, 0.8125)
  !Border:
    Texture(file: '%textures\control-edge'):
      !Size(12, 12)
      !TopLeft(-6, 12)
      !BottomLeft(-6, -12)
      !TexCoords(0, 0.1875, 0.1875, 0.8125)
  Button $parentLess(NoInherit, .less):
    !Size(16, 16)
    !Anchor(point: BOTTOM, relativePoint: TOP, x: 0, y: -3)
    NormalTexture(epArrowUpBg)
    HighlightTexture(epControlHighlight)
    !Border:
      Texture(epControlEdgeB):
        !Size(14, 12)
        !Anchor(point: TOP, relativePoint: BOTTOM, x: 0, y: 6)
    OnMouseUp:
      *if button == 'LeftButton' or button == 'RightButton' then
      *  self:GetParent():move(-1, (IsShiftKeyDown() or button == 'RightButton'))
      *end
  Button $parentMore(NoInherit, .more):
    !Size(16, 16)
    !Anchor(point: TOP, relativePoint: BOTTOM, x: 0, y: 3)
    NormalTexture(epArrowDownBg)
    HighlightTexture(epControlHighlight)
    !Border:
      Texture(epControlEdgeT):
        !Size(14, 12)
        !Anchor(point: BOTTOM, relativePoint: TOP, x: 0, y: -6)
    OnMouseUp:
      *if button == 'LeftButton' or button == 'RightButton' then
      *  self:GetParent():move(1, (IsShiftKeyDown() or button == 'RightButton'))
      *end
  OnLoad:
    *ep.Slider(self)
  OnMouseWheel:
    *self:move(-delta)
  OnValueChanged:
    *if self.update then
    *  self:update(value)
    *end

Slider epVerticalSlider(orientation: VERTICAL, valueStep: 1, virtual):
  !Size(x: 19)
  ThumbTexture $parentThumb(file: '%textures\thumb-vertical'):
    !Size(23, 23)
    !HitRectInsets(2, 2, 2, 2)
    !TexCoords(0.1875, 0.8125, 0.1875, 0.8125)
  !Border:
    Texture(epControlEdgeTL):
      !TopLeft(-6, 22)
    Texture(epControlEdgeT):
      !TopLeft(6, 22)
      !TopRight(-6, 22)
    Texture(epControlEdgeTR):
      !TopRight(6, 22)
    Texture(epControlEdgeL):
      !TopLeft(-6, 10)
      !BottomLeft(-6, -10)
    Texture(epControlEdgeR):
      !TopRight(6, 10)
      !BottomRight(6, -10)
    Texture(epControlEdgeBL):
      !BottomLeft(-6, -22)
    Texture(epControlEdgeB):
      !BottomLeft(6, -22)
      !BottomRight(-6, -22)
    Texture(epControlEdgeBR):
      !BottomRight(6, -22)
  Button $parentLess(NoInherit, .less):
    !Size(19, 19)
    !Anchor(point: BOTTOM, relativePoint: TOP, x: 0, y: -3)
    NormalTexture(epArrowUpBg):
      !Size(17, 17)
    HighlightTexture(epControlHighlight):
      !Size(17, 17)
    !Border:
      Texture(epControlEdgeB):
        !Size(17, 12)
        !Anchor(point: TOP, relativePoint: BOTTOM, x: 0, y: 6)
    OnMouseUp:
      *if button == 'LeftButton' or button == 'RightButton' then
      *  self:GetParent():move(-1, (IsShiftKeyDown() or button == 'RightButton'))
      *end
  Button $parentMore(NoInherit, .more):
    !Size(19, 19)
    !Anchor(point: TOP, relativePoint: BOTTOM, x: 0, y: 3)
    NormalTexture(epArrowDownBg):
      !Size(17, 17)
    HighlightTexture(epControlHighlight):
      !Size(17, 17)
    !Border:
      Texture(epControlEdgeT):
        !Size(17, 12)
        !Anchor(point: BOTTOM, relativePoint: TOP, x: 0, y: -6)
    OnMouseUp:
      *if button == 'LeftButton' or button == 'RightButton' then
      *  self:GetParent():move(1, (IsShiftKeyDown() or button == 'RightButton'))
      *end
  OnLoad:
    *ep.Slider(self)
  OnMouseWheel:
    *self:move(-delta)
  OnValueChanged:
    *if self.update then
    *  self:update(value)
    *end
